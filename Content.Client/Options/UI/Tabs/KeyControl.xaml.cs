using Robust.Client.AutoGenerated;
using Robust.Client.Input;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Input;
using Robust.Shared.Utility;

namespace Content.Client.Options.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class KeyControl : Control
{
    private readonly BoundKeyFunction _function;

    public IKeyBinding? Bind1;
    public IKeyBinding? Bind2;

    /// <inheritdoc />
    public KeyControl()
    {
        RobustXamlLoader.Load(this);
    }

    public required BoundKeyFunction Function
    {
        get => _function;
        init 
        {
            _function = value;
                NameLabel.Text = Loc.GetString(
                    $"ui-options-function-{CaseConversion.PascalToKebab(value.FunctionName)}"
                );
        }
    }

    public required Action OnReset
    {
        init => ResetButton.OnPressed += _ => value();
    }

    public required Action<GUIBoundKeyEventArgs, IKeyBinding> ButtonOnKeyBindingDown
    {
        init
        {
            BindButton1.ButtonOnKeyBindingDown = value;
            BindButton2.ButtonOnKeyBindingDown = value;
        }
    }

    public required Action<BindButton, BoundKeyFunction, IKeyBinding?> OnBind
    {
        init
        {
            BindButton1.OnPressed += args =>  value(BindButton1, _function, Bind1);
            BindButton2.OnPressed += args =>  value(BindButton2, _function, Bind2);
        }
    }

    public void UpdateData(IInputManager inputManager)
    {
        var activeBinds = inputManager.GetKeyBindings(Function);
        Bind1 = null;
        Bind2 = null;
        if (activeBinds.Count > 0)
        {
            Bind1 = activeBinds[0];

            if (activeBinds.Count > 1)
            {
                Bind2 = activeBinds[1];
            }
        }

        BindButton1.Binding = Bind1;
        BindButton2.Binding = Bind2;
        ResetButton.Disabled = !inputManager.IsKeyFunctionModified(Function);
    }

    public void UpdateBindText()
    {
        BindButton1.UpdateText();
        BindButton2.UpdateText();
    }
}
